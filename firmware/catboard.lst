   1               		.file	"catboard.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  15               	.Ltext0:
  16               		.section	.text.change_layout,"ax",@progbits
  17               	.global	change_layout
  19               	change_layout:
  20               	.LFB13:
  21               	.LSM0:
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 0 */
  25               	.L__stack_usage = 0
  26               	.LSM1:
  27 0000 8091 0000 		lds r24,mac_mode
  28 0004 8823      		tst r24
  29 0006 01F0      		breq .L2
  30               	.LSM2:
  31 0008 88E0      		ldi r24,lo8(8)
  32 000a 8093 0000 		sts keyboard_modifier_keys,r24
  33               	.LSM3:
  34 000e 1092 0000 		sts keyboard_keys,__zero_reg__
  35               	.LSM4:
  36 0012 0E94 0000 		call usb_keyboard_send
  37               	.LVL0:
  38               	.LBB19:
  39               	.LBB20:
  40               	.LSM5:
  41 0016 8FEF      		 ldi r24,lo8(159999)
  42 0018 90E7      	    ldi r25,hi8(159999)
  43 001a A2E0      	    ldi r26,hlo8(159999)
  44 001c 8150      	    1:subi r24,1
  45 001e 9040      	    sbci r25,0
  46 0020 A040      	    sbci r26,0
  47 0022 01F4      	    brne 1b
  48 0024 00C0      		rjmp .
  49 0026 0000      		nop
  50               	.LBE20:
  51               	.LBE19:
  52               	.LSM6:
  53 0028 8CE2      		ldi r24,lo8(44)
  54 002a 68E0      		ldi r22,lo8(8)
  55 002c 00C0      		rjmp .L4
  56               	.LVL1:
  57               	.L2:
  58               	.LSM7:
  59 002e 84E0      		ldi r24,lo8(4)
  60 0030 8093 0000 		sts keyboard_modifier_keys,r24
  61               	.LSM8:
  62 0034 1092 0000 		sts keyboard_keys,__zero_reg__
  63               	.LSM9:
  64 0038 0E94 0000 		call usb_keyboard_send
  65               	.LVL2:
  66               	.LBB21:
  67               	.LBB22:
  68               	.LSM10:
  69 003c 8FEF      		 ldi r24,lo8(159999)
  70 003e 90E7      	    ldi r25,hi8(159999)
  71 0040 A2E0      	    ldi r26,hlo8(159999)
  72 0042 8150      	    1:subi r24,1
  73 0044 9040      	    sbci r25,0
  74 0046 A040      	    sbci r26,0
  75 0048 01F4      	    brne 1b
  76 004a 00C0      		rjmp .
  77 004c 0000      		nop
  78               	.LBE22:
  79               	.LBE21:
  80               	.LSM11:
  81 004e 80E0      		ldi r24,lo8(0)
  82 0050 66E0      		ldi r22,lo8(6)
  83               	.LVL3:
  84               	.L4:
  85 0052 0E94 0000 		call usb_keyboard_press
  86 0056 0895      		ret
  87               	.LFE13:
  89               		.section	.text.init,"ax",@progbits
  90               	.global	init
  92               	init:
  93               	.LFB8:
  94               	.LSM12:
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               	.LSM13:
 100 0000 80E8      		ldi r24,lo8(-128)
 101 0002 8093 6100 		sts 97,r24
 102 0006 1092 6100 		sts 97,__zero_reg__
 103               	.LSM14:
 104 000a 14B8      		out 36-32,__zero_reg__
 105 000c 94EF      		ldi r25,lo8(-12)
 106 000e 97B9      		out 39-32,r25
 107 0010 1AB8      		out 42-32,__zero_reg__
 108               	.LSM15:
 109 0012 8FEF      		ldi r24,lo8(-1)
 110 0014 85B9      		out 37-32,r24
 111 0016 98B9      		out 40-32,r25
 112 0018 8BB9      		out 43-32,r24
 113               	.LSM16:
 114 001a 549A      		sbi 42-32,4
 115               	.LSM17:
 116 001c 5C9A      		sbi 43-32,4
 117               	.LVL4:
 118 001e E0E0      		ldi r30,lo8(pressed)
 119 0020 F0E0      		ldi r31,hi8(pressed)
 120               	.LVL5:
 121               	.L6:
 122               	.LBB23:
 123               	.LSM18:
 124 0022 1192      		st Z+,__zero_reg__
 125               	.LSM19:
 126 0024 80E0      		ldi r24,hi8(pressed+60)
 127 0026 E030      		cpi r30,lo8(pressed+60)
 128 0028 F807      		cpc r31,r24
 129 002a 01F4      		brne .L6
 130               	.LBE23:
 131               	.LSM20:
 132 002c 0E94 0000 		call usb_init
 133               	.LSM21:
 134 0030 5C98      		cbi 43-32,4
 135               	.L7:
 136               	.LSM22:
 137 0032 0E94 0000 		call usb_configured
 138 0036 8823      		tst r24
 139 0038 01F0      		breq .L7
 140               	.LSM23:
 141 003a 5C9A      		sbi 43-32,4
 142               	.LVL6:
 143               	.LBB24:
 144               	.LBB25:
 145               	.LSM24:
 146 003c 8FEF      		 ldi r24,lo8(3199999)
 147 003e 93ED      	    ldi r25,hi8(3199999)
 148 0040 A0E3      	    ldi r26,hlo8(3199999)
 149 0042 8150      	    1:subi r24,1
 150 0044 9040      	    sbci r25,0
 151 0046 A040      	    sbci r26,0
 152 0048 01F4      	    brne 1b
 153 004a 00C0      		rjmp .
 154 004c 0000      		nop
 155               	.LBE25:
 156               	.LBE24:
 157               	.LSM25:
 158 004e 5C98      		cbi 43-32,4
 159               	/* epilogue start */
 160               	.LSM26:
 161 0050 0895      		ret
 162               	.LFE8:
 164               		.section	.text.get_code,"ax",@progbits
 165               	.global	get_code
 167               	get_code:
 168               	.LFB15:
 169               	.LSM27:
 170               	.LVL7:
 171               	/* prologue: function */
 172               	/* frame size = 0 */
 173               	/* stack size = 0 */
 174               	.L__stack_usage = 0
 175               	.LSM28:
 176 0000 8C33      		cpi r24,lo8(60)
 177 0002 00F4      		brsh .L14
 178               	.LSM29:
 179 0004 282F      		mov r18,r24
 180 0006 30E0      		ldi r19,lo8(0)
 181 0008 F901      		movw r30,r18
 182 000a E050      		subi r30,lo8(-(pressed))
 183 000c F040      		sbci r31,hi8(-(pressed))
 184 000e 9081      		ld r25,Z
 185 0010 9130      		cpi r25,lo8(1)
 186 0012 01F4      		brne .L12
 187               	.LVL8:
 188               	.LSM30:
 189 0014 2050      		subi r18,lo8(-(layer_fn))
 190 0016 3040      		sbci r19,hi8(-(layer_fn))
 191               	.LVL9:
 192 0018 F901      		movw r30,r18
 193 001a 8081      		ld r24,Z
 194               	.LVL10:
 195 001c 1816      		cp __zero_reg__,r24
 196 001e 04F0      		brlt .L11
 197               	.LSM31:
 198 0020 80E0      		ldi r24,lo8(0)
 199 0022 0895      		ret
 200               	.LVL11:
 201               	.L12:
 202               	.LSM32:
 203 0024 4091 0000 		lds r20,layout
 204 0028 5091 0000 		lds r21,layout+1
 205 002c F0E0      		ldi r31,hi8(layer_fn)
 206 002e 4030      		cpi r20,lo8(layer_fn)
 207 0030 5F07      		cpc r21,r31
 208 0032 01F0      		breq .L13
 209               	.LSM33:
 210 0034 9230      		cpi r25,lo8(2)
 211 0036 01F4      		brne .L13
 212               	.LSM34:
 213 0038 2050      		subi r18,lo8(-(layer1))
 214 003a 3040      		sbci r19,hi8(-(layer1))
 215               	.LVL12:
 216 003c F901      		movw r30,r18
 217 003e 00C0      		rjmp .L15
 218               	.L13:
 219               	.LSM35:
 220 0040 480F      		add r20,r24
 221 0042 511D      		adc r21,__zero_reg__
 222 0044 FA01      		movw r30,r20
 223               	.L15:
 224 0046 8081      		ld r24,Z
 225               	.LVL13:
 226 0048 0895      		ret
 227               	.LVL14:
 228               	.L14:
 229               	.LSM36:
 230 004a 80E0      		ldi r24,lo8(0)
 231               	.LVL15:
 232               	.L11:
 233               	.LSM37:
 234 004c 0895      		ret
 235               	.LFE15:
 237               		.section	.text.send,"ax",@progbits
 238               	.global	send
 240               	send:
 241               	.LFB14:
 242               	.LSM38:
 243 0000 0F93      		push r16
 244 0002 1F93      		push r17
 245 0004 CF93      		push r28
 246 0006 DF93      		push r29
 247               	/* prologue: function */
 248               	/* frame size = 0 */
 249               	/* stack size = 4 */
 250               	.L__stack_usage = 4
 251               	.LVL16:
 252               	.LSM39:
 253 0008 C0E0      		ldi r28,lo8(queue)
 254 000a D0E0      		ldi r29,hi8(queue)
 255 000c 00E0      		ldi r16,lo8(keyboard_keys)
 256 000e 10E0      		ldi r17,hi8(keyboard_keys)
 257               	.LVL17:
 258               	.L17:
 259               	.LSM40:
 260 0010 8991      		ld r24,Y+
 261 0012 0E94 0000 		call get_code
 262 0016 F801      		movw r30,r16
 263 0018 8193      		st Z+,r24
 264 001a 8F01      		movw r16,r30
 265               	.LSM41:
 266 001c F0E0      		ldi r31,hi8(queue+6)
 267 001e C030      		cpi r28,lo8(queue+6)
 268 0020 DF07      		cpc r29,r31
 269 0022 01F4      		brne .L17
 270               	.LSM42:
 271 0024 8091 0000 		lds r24,mod_keys
 272 0028 8093 0000 		sts keyboard_modifier_keys,r24
 273               	.LSM43:
 274 002c 0E94 0000 		call usb_keyboard_send
 275               	/* epilogue start */
 276               	.LSM44:
 277 0030 DF91      		pop r29
 278 0032 CF91      		pop r28
 279 0034 1F91      		pop r17
 280 0036 0F91      		pop r16
 281 0038 0895      		ret
 282               	.LFE14:
 284               		.section	.text.key_release,"ax",@progbits
 285               	.global	key_release
 287               	key_release:
 288               	.LFB12:
 289               	.LSM45:
 290               	.LVL18:
 291 0000 DF93      		push r29
 292 0002 CF93      		push r28
 293 0004 0F92      		push __tmp_reg__
 294 0006 CDB7      		in r28,__SP_L__
 295 0008 DEB7      		in r29,__SP_H__
 296               	/* prologue: function */
 297               	/* frame size = 1 */
 298               	/* stack size = 3 */
 299               	.L__stack_usage = 3
 300               	.LSM46:
 301 000a 282F      		mov r18,r24
 302 000c 30E0      		ldi r19,lo8(0)
 303 000e F901      		movw r30,r18
 304 0010 E050      		subi r30,lo8(-(pressed))
 305 0012 F040      		sbci r31,hi8(-(pressed))
 306 0014 4081      		ld r20,Z
 307               	.LVL19:
 308               	.LSM47:
 309 0016 4130      		cpi r20,lo8(1)
 310 0018 01F4      		brne .L20
 311               	.LVL20:
 312               	.LSM48:
 313 001a F901      		movw r30,r18
 314               	.LVL21:
 315 001c E050      		subi r30,lo8(-(layer_fn))
 316 001e F040      		sbci r31,hi8(-(layer_fn))
 317 0020 00C0      		rjmp .L38
 318               	.L20:
 319               	.LSM49:
 320 0022 E091 0000 		lds r30,layout
 321 0026 F091 0000 		lds r31,layout+1
 322 002a E20F      		add r30,r18
 323 002c F31F      		adc r31,r19
 324               	.L38:
 325 002e 9081      		ld r25,Z
 326               	.LVL22:
 327               	.LSM50:
 328 0030 2050      		subi r18,lo8(-(pressed))
 329 0032 3040      		sbci r19,hi8(-(pressed))
 330               	.LVL23:
 331 0034 F901      		movw r30,r18
 332               	.LVL24:
 333 0036 1082      		st Z,__zero_reg__
 334               	.LSM51:
 335 0038 913F      		cpi r25,lo8(-15)
 336 003a 00F0      		brlo .L22
 337               	.LSM52:
 338 003c 9D3F      		cpi r25,lo8(-3)
 339 003e 01F0      		breq .+2
 340 0040 00C0      		rjmp .L19
 341               	.LSM53:
 342 0042 4330      		cpi r20,lo8(3)
 343 0044 01F4      		brne .+2
 344 0046 00C0      		rjmp .L19
 345               	.LSM54:
 346 0048 8091 0000 		lds r24,mod_keys
 347               	.LVL25:
 348 004c 8B7F      		andi r24,lo8(-5)
 349 004e 00C0      		rjmp .L39
 350               	.LVL26:
 351               	.L22:
 352               	.LSM55:
 353 0050 97FF      		sbrs r25,7
 354 0052 00C0      		rjmp .L24
 355               	.LSM56:
 356 0054 8091 0000 		lds r24,mac_mode
 357               	.LVL27:
 358 0058 8823      		tst r24
 359 005a 01F0      		breq .L25
 360               	.LSM57:
 361 005c 9138      		cpi r25,lo8(-127)
 362 005e 01F4      		brne .L26
 363               	.LSM58:
 364 0060 8091 0000 		lds r24,mod_keys
 365 0064 877F      		andi r24,lo8(-9)
 366 0066 00C0      		rjmp .L39
 367               	.L26:
 368               	.LSM59:
 369 0068 9039      		cpi r25,lo8(-112)
 370 006a 01F0      		breq .L28
 371               	.L25:
 372               	.LSM60:
 373 006c 9038      		cpi r25,lo8(-128)
 374 006e 01F4      		brne .L29
 375               	.L28:
 376               	.LSM61:
 377 0070 8091 0000 		lds r24,mod_keys
 378 0074 8F77      		andi r24,lo8(127)
 379 0076 00C0      		rjmp .L39
 380               	.L29:
 381               	.LSM62:
 382 0078 9F77      		andi r25,lo8(127)
 383               	.LVL28:
 384 007a 9095      		com r25
 385 007c 8091 0000 		lds r24,mod_keys
 386 0080 8923      		and r24,r25
 387               	.L39:
 388 0082 8093 0000 		sts mod_keys,r24
 389               	.LSM63:
 390 0086 0E94 0000 		call send
 391               	.LVL29:
 392 008a 00C0      		rjmp .L19
 393               	.LVL30:
 394               	.L24:
 395 008c E0E0      		ldi r30,lo8(queue)
 396 008e F0E0      		ldi r31,hi8(queue)
 397               	.LSM64:
 398 0090 90E0      		ldi r25,lo8(0)
 399               	.LVL31:
 400               	.L32:
 401               	.LSM65:
 402 0092 2191      		ld r18,Z+
 403 0094 2817      		cp r18,r24
 404 0096 01F0      		breq .L37
 405               	.LSM66:
 406 0098 9F5F      		subi r25,lo8(-(1))
 407               	.LVL32:
 408 009a 9630      		cpi r25,lo8(6)
 409 009c 01F4      		brne .L32
 410 009e 00C0      		rjmp .L37
 411               	.L34:
 412               	.LSM67:
 413 00a0 E92F      		mov r30,r25
 414 00a2 F0E0      		ldi r31,lo8(0)
 415 00a4 E050      		subi r30,lo8(-(queue))
 416 00a6 F040      		sbci r31,hi8(-(queue))
 417 00a8 2181      		ldd r18,Z+1
 418 00aa 2083      		st Z,r18
 419               	.LSM68:
 420 00ac 9F5F      		subi r25,lo8(-(1))
 421               	.LVL33:
 422               	.L37:
 423               	.LSM69:
 424 00ae 9630      		cpi r25,lo8(6)
 425 00b0 00F0      		brlo .L34
 426               	.LSM70:
 427 00b2 8983      		std Y+1,r24
 428 00b4 0E94 0000 		call send
 429               	.LVL34:
 430               	.LSM71:
 431 00b8 9091 0000 		lds r25,last_key
 432 00bc 8981      		ldd r24,Y+1
 433 00be 9817      		cp r25,r24
 434 00c0 01F4      		brne .L35
 435               	.LSM72:
 436 00c2 1092 0000 		sts press_time2+1,__zero_reg__
 437 00c6 1092 0000 		sts press_time2,__zero_reg__
 438               	.LSM73:
 439 00ca 81E0      		ldi r24,lo8(1)
 440 00cc 90E0      		ldi r25,hi8(1)
 441 00ce 9093 0000 		sts release_time+1,r25
 442 00d2 8093 0000 		sts release_time,r24
 443 00d6 00C0      		rjmp .L41
 444               	.L35:
 445               	.LSM74:
 446 00d8 1092 0000 		sts press_time+1,__zero_reg__
 447 00dc 1092 0000 		sts press_time,__zero_reg__
 448               	.LSM75:
 449 00e0 1092 0000 		sts press_time2+1,__zero_reg__
 450 00e4 1092 0000 		sts press_time2,__zero_reg__
 451               	.LSM76:
 452 00e8 1092 0000 		sts release_time+1,__zero_reg__
 453 00ec 1092 0000 		sts release_time,__zero_reg__
 454               	.L41:
 455               	.LSM77:
 456 00f0 1092 0000 		sts repeat_time+1,__zero_reg__
 457 00f4 1092 0000 		sts repeat_time,__zero_reg__
 458               	.L19:
 459               	/* epilogue start */
 460               	.LSM78:
 461 00f8 0F90      		pop __tmp_reg__
 462 00fa CF91      		pop r28
 463 00fc DF91      		pop r29
 464 00fe 0895      		ret
 465               	.LFE12:
 467               		.section	.text.key_press,"ax",@progbits
 468               	.global	key_press
 470               	key_press:
 471               	.LFB11:
 472               	.LSM79:
 473               	.LVL35:
 474 0000 DF93      		push r29
 475 0002 CF93      		push r28
 476 0004 0F92      		push __tmp_reg__
 477 0006 CDB7      		in r28,__SP_L__
 478 0008 DEB7      		in r29,__SP_H__
 479               	/* prologue: function */
 480               	/* frame size = 1 */
 481               	/* stack size = 3 */
 482               	.L__stack_usage = 3
 483               	.LSM80:
 484 000a 4091 0000 		lds r20,mod_keys
 485               	.LVL36:
 486               	.LSM81:
 487 000e 282F      		mov r18,r24
 488 0010 30E0      		ldi r19,lo8(0)
 489 0012 9091 0000 		lds r25,pressed+35
 490 0016 9923      		tst r25
 491 0018 01F4      		brne .L70
 492               	.LVL37:
 493               	.LSM82:
 494 001a 942F      		mov r25,r20
 495 001c 9D7D      		andi r25,lo8(-35)
 496               	.LSM83:
 497 001e 01F0      		breq .L71
 498               	.LSM84:
 499 0020 52E0      		ldi r21,lo8(2)
 500 0022 00C0      		rjmp .L43
 501               	.L70:
 502 0024 51E0      		ldi r21,lo8(1)
 503 0026 00C0      		rjmp .L43
 504               	.L71:
 505 0028 5FEF      		ldi r21,lo8(-1)
 506               	.L43:
 507               	.LSM85:
 508 002a F901      		movw r30,r18
 509 002c E050      		subi r30,lo8(-(pressed))
 510 002e F040      		sbci r31,hi8(-(pressed))
 511 0030 5083      		st Z,r21
 512               	.LSM86:
 513 0032 5130      		cpi r21,lo8(1)
 514 0034 01F4      		brne .L44
 515               	.LSM87:
 516 0036 F901      		movw r30,r18
 517 0038 E050      		subi r30,lo8(-(layer_fn))
 518 003a F040      		sbci r31,hi8(-(layer_fn))
 519 003c 00C0      		rjmp .L73
 520               	.L44:
 521               	.LSM88:
 522 003e E091 0000 		lds r30,layout
 523 0042 F091 0000 		lds r31,layout+1
 524 0046 E80F      		add r30,r24
 525 0048 F11D      		adc r31,__zero_reg__
 526               	.L73:
 527 004a 9081      		ld r25,Z
 528               	.LVL38:
 529               	.LSM89:
 530 004c 913F      		cpi r25,lo8(-15)
 531 004e 00F4      		brsh .+2
 532 0050 00C0      		rjmp .L46
 533               	.LSM90:
 534 0052 9D3F      		cpi r25,lo8(-3)
 535 0054 01F4      		brne .L47
 536               	.LSM91:
 537 0056 5130      		cpi r21,lo8(1)
 538 0058 01F4      		brne .L48
 539               	.LSM92:
 540 005a 8BE2      		ldi r24,lo8(43)
 541 005c 64E0      		ldi r22,lo8(4)
 542 005e 0E94 0000 		call usb_keyboard_press
 543               	.LVL39:
 544 0062 00C0      		rjmp .L42
 545               	.LVL40:
 546               	.L48:
 547               	.LSM93:
 548 0064 842F      		mov r24,r20
 549 0066 8474      		andi r24,lo8(68)
 550 0068 01F4      		brne .L50
 551               	.LSM94:
 552 006a 4460      		ori r20,lo8(4)
 553               	.LVL41:
 554 006c 4093 0000 		sts mod_keys,r20
 555 0070 00C0      		rjmp .L51
 556               	.L50:
 557               	.LSM95:
 558 0072 2050      		subi r18,lo8(-(pressed))
 559 0074 3040      		sbci r19,hi8(-(pressed))
 560               	.LVL42:
 561 0076 83E0      		ldi r24,lo8(3)
 562 0078 D901      		movw r26,r18
 563 007a 8C93      		st X,r24
 564               	.L51:
 565               	.LSM96:
 566 007c 8091 0000 		lds r24,mod_keys
 567 0080 8093 0000 		sts keyboard_modifier_keys,r24
 568               	.LSM97:
 569 0084 8BE2      		ldi r24,lo8(43)
 570 0086 8093 0000 		sts keyboard_keys,r24
 571               	.LSM98:
 572 008a 0E94 0000 		call usb_keyboard_send
 573               	.LVL43:
 574               	.LBB26:
 575               	.LBB27:
 576               	.LSM99:
 577 008e 8FEF      		 ldi r24,lo8(159999)
 578 0090 90E7      	    ldi r25,hi8(159999)
 579 0092 A2E0      	    ldi r26,hlo8(159999)
 580 0094 8150      	    1:subi r24,1
 581 0096 9040      	    sbci r25,0
 582 0098 A040      	    sbci r26,0
 583 009a 01F4      	    brne 1b
 584 009c 00C0      		rjmp .
 585 009e 0000      		nop
 586 00a0 00C0      		rjmp .L67
 587               	.LVL44:
 588               	.L47:
 589               	.LBE27:
 590               	.LBE26:
 591               	.LSM100:
 592 00a2 9E3F      		cpi r25,lo8(-2)
 593 00a4 01F4      		brne .L52
 594               	.LSM101:
 595 00a6 8091 0000 		lds r24,prev_layer
 596 00aa 9091 0000 		lds r25,prev_layer+1
 597 00ae 0097      		sbiw r24,0
 598 00b0 01F0      		breq .L53
 599               	.LSM102:
 600 00b2 9093 0000 		sts layout+1,r25
 601 00b6 8093 0000 		sts layout,r24
 602               	.LSM103:
 603 00ba 1092 0000 		sts prev_layer+1,__zero_reg__
 604 00be 1092 0000 		sts prev_layer,__zero_reg__
 605 00c2 00C0      		rjmp .L56
 606               	.L53:
 607               	.LSM104:
 608 00c4 8091 0000 		lds r24,layout
 609 00c8 9091 0000 		lds r25,layout+1
 610 00cc 9093 0000 		sts prev_layer+1,r25
 611 00d0 8093 0000 		sts prev_layer,r24
 612               	.LSM105:
 613 00d4 80E0      		ldi r24,lo8(layer_fn)
 614 00d6 90E0      		ldi r25,hi8(layer_fn)
 615 00d8 9093 0000 		sts layout+1,r25
 616 00dc 8093 0000 		sts layout,r24
 617 00e0 00C0      		rjmp .L76
 618               	.L52:
 619               	.LSM106:
 620 00e2 9C3F      		cpi r25,lo8(-4)
 621 00e4 01F4      		brne .L54
 622               	.LSM107:
 623 00e6 81E0      		ldi r24,lo8(1)
 624 00e8 9091 0000 		lds r25,mac_mode
 625               	.LVL45:
 626 00ec 9111      		cpse r25,__zero_reg__
 627 00ee 80E0      		ldi r24,lo8(0)
 628               	.L55:
 629 00f0 8093 0000 		sts mac_mode,r24
 630               	.LSM108:
 631 00f4 8823      		tst r24
 632 00f6 01F0      		breq .L56
 633               	.L76:
 634               	.LSM109:
 635 00f8 5C9A      		sbi 43-32,4
 636 00fa 00C0      		rjmp .L42
 637               	.L56:
 638               	.LSM110:
 639 00fc 5C98      		cbi 43-32,4
 640 00fe 00C0      		rjmp .L42
 641               	.L54:
 642               	.LSM111:
 643 0100 913F      		cpi r25,lo8(-15)
 644 0102 01F4      		brne .L57
 645               	.LSM112:
 646 0104 2091 0000 		lds r18,layout
 647 0108 3091 0000 		lds r19,layout+1
 648               	.LVL46:
 649 010c 80E0      		ldi r24,lo8(layer1)
 650 010e 90E0      		ldi r25,hi8(layer1)
 651               	.LVL47:
 652 0110 2817      		cp r18,r24
 653 0112 3907      		cpc r19,r25
 654 0114 01F4      		brne .+2
 655 0116 00C0      		rjmp .L42
 656               	.LBB28:
 657               	.LSM113:
 658 0118 B0E0      		ldi r27,hi8(layer_fn)
 659 011a 2030      		cpi r18,lo8(layer_fn)
 660 011c 3B07      		cpc r19,r27
 661 011e 01F4      		brne .L60
 662 0120 00C0      		rjmp .L77
 663               	.LVL48:
 664               	.L57:
 665               	.LBE28:
 666               	.LSM114:
 667 0122 923F      		cpi r25,lo8(-14)
 668 0124 01F0      		breq .+2
 669 0126 00C0      		rjmp .L42
 670               	.LSM115:
 671 0128 2091 0000 		lds r18,layout
 672 012c 3091 0000 		lds r19,layout+1
 673               	.LVL49:
 674 0130 80E0      		ldi r24,lo8(layer2)
 675 0132 90E0      		ldi r25,hi8(layer2)
 676               	.LVL50:
 677 0134 2817      		cp r18,r24
 678 0136 3907      		cpc r19,r25
 679               	.LVL51:
 680 0138 01F4      		brne .+2
 681 013a 00C0      		rjmp .L42
 682               	.LBB29:
 683               	.LSM116:
 684 013c F0E0      		ldi r31,hi8(layer_fn)
 685 013e 2030      		cpi r18,lo8(layer_fn)
 686 0140 3F07      		cpc r19,r31
 687 0142 01F4      		brne .L60
 688               	.L77:
 689               	.LSM117:
 690 0144 9093 0000 		sts prev_layer+1,r25
 691 0148 8093 0000 		sts prev_layer,r24
 692 014c 00C0      		rjmp .L61
 693               	.L60:
 694               	.LSM118:
 695 014e 9093 0000 		sts layout+1,r25
 696 0152 8093 0000 		sts layout,r24
 697               	.L61:
 698               	.LSM119:
 699 0156 0E94 0000 		call change_layout
 700               	.LVL52:
 701 015a 00C0      		rjmp .L42
 702               	.LVL53:
 703               	.L46:
 704               	.LBE29:
 705               	.LSM120:
 706 015c 97FD      		sbrc r25,7
 707 015e 00C0      		rjmp .L62
 708               	.LVL54:
 709               	.LSM121:
 710 0160 9091 0000 		lds r25,queue+4
 711               	.LVL55:
 712 0164 9093 0000 		sts queue+5,r25
 713               	.LVL56:
 714 0168 9091 0000 		lds r25,queue+3
 715 016c 9093 0000 		sts queue+4,r25
 716               	.LVL57:
 717 0170 9091 0000 		lds r25,queue+2
 718 0174 9093 0000 		sts queue+3,r25
 719               	.LVL58:
 720 0178 9091 0000 		lds r25,queue+1
 721 017c 9093 0000 		sts queue+2,r25
 722               	.LVL59:
 723 0180 9091 0000 		lds r25,queue
 724 0184 9093 0000 		sts queue+1,r25
 725               	.LVL60:
 726               	.LSM122:
 727 0188 8093 0000 		sts queue,r24
 728               	.LSM123:
 729 018c 8983      		std Y+1,r24
 730 018e 0E94 0000 		call send
 731               	.LVL61:
 732               	.LSM124:
 733 0192 9091 0000 		lds r25,last_key
 734 0196 8981      		ldd r24,Y+1
 735 0198 9817      		cp r25,r24
 736 019a 01F4      		brne .L72
 737 019c 00C0      		rjmp .L78
 738               	.LVL62:
 739               	.L62:
 740               	.LSM125:
 741 019e 8091 0000 		lds r24,mac_mode
 742 01a2 8823      		tst r24
 743 01a4 01F0      		breq .L65
 744               	.LSM126:
 745 01a6 9138      		cpi r25,lo8(-127)
 746 01a8 01F4      		brne .L66
 747               	.LSM127:
 748 01aa 4860      		ori r20,lo8(8)
 749               	.LVL63:
 750 01ac 00C0      		rjmp .L74
 751               	.L66:
 752               	.LSM128:
 753 01ae 9039      		cpi r25,lo8(-112)
 754 01b0 01F0      		breq .L68
 755               	.L65:
 756               	.LSM129:
 757 01b2 9038      		cpi r25,lo8(-128)
 758 01b4 01F4      		brne .L69
 759               	.L68:
 760               	.LSM130:
 761 01b6 4068      		ori r20,lo8(-128)
 762               	.L74:
 763 01b8 4093 0000 		sts mod_keys,r20
 764 01bc 00C0      		rjmp .L67
 765               	.L69:
 766               	.LSM131:
 767 01be 9F77      		andi r25,lo8(127)
 768               	.LVL64:
 769 01c0 942B      		or r25,r20
 770 01c2 9093 0000 		sts mod_keys,r25
 771               	.LVL65:
 772               	.L67:
 773               	.LSM132:
 774 01c6 0E94 0000 		call send
 775 01ca 00C0      		rjmp .L42
 776               	.LVL66:
 777               	.L78:
 778               	.LSM133:
 779 01cc 81E0      		ldi r24,lo8(1)
 780 01ce 90E0      		ldi r25,hi8(1)
 781 01d0 9093 0000 		sts press_time2+1,r25
 782 01d4 8093 0000 		sts press_time2,r24
 783 01d8 00C0      		rjmp .L75
 784               	.L72:
 785               	.LSM134:
 786 01da 8093 0000 		sts last_key,r24
 787               	.LSM135:
 788 01de 81E0      		ldi r24,lo8(1)
 789 01e0 90E0      		ldi r25,hi8(1)
 790 01e2 9093 0000 		sts press_time+1,r25
 791 01e6 8093 0000 		sts press_time,r24
 792               	.LSM136:
 793 01ea 1092 0000 		sts press_time2+1,__zero_reg__
 794 01ee 1092 0000 		sts press_time2,__zero_reg__
 795               	.LSM137:
 796 01f2 1092 0000 		sts release_time+1,__zero_reg__
 797 01f6 1092 0000 		sts release_time,__zero_reg__
 798               	.L75:
 799               	.LSM138:
 800 01fa 1092 0000 		sts repeat_time+1,__zero_reg__
 801 01fe 1092 0000 		sts repeat_time,__zero_reg__
 802               	.LVL67:
 803               	.L42:
 804               	/* epilogue start */
 805               	.LSM139:
 806 0202 0F90      		pop __tmp_reg__
 807 0204 CF91      		pop r28
 808 0206 DF91      		pop r29
 809 0208 0895      		ret
 810               	.LFE11:
 812               		.section	.text.repeat_tick,"ax",@progbits
 813               	.global	repeat_tick
 815               	repeat_tick:
 816               	.LFB10:
 817               	.LSM140:
 818               	/* prologue: function */
 819               	/* frame size = 0 */
 820               	/* stack size = 0 */
 821               	.L__stack_usage = 0
 822               	.LSM141:
 823 0000 8091 0000 		lds r24,repeat_time
 824 0004 9091 0000 		lds r25,repeat_time+1
 825 0008 0097      		sbiw r24,0
 826 000a 01F0      		breq .L80
 827               	.LSM142:
 828 000c 2091 0000 		lds r18,release_time
 829 0010 3091 0000 		lds r19,release_time+1
 830 0014 3695      		lsr r19
 831 0016 2795      		ror r18
 832 0018 3695      		lsr r19
 833 001a 2795      		ror r18
 834 001c 8217      		cp r24,r18
 835 001e 9307      		cpc r25,r19
 836 0020 00F4      		brsh .L81
 837               	.LSM143:
 838 0022 0196      		adiw r24,1
 839 0024 00C0      		rjmp .L90
 840               	.L81:
 841               	.LSM144:
 842 0026 81E0      		ldi r24,lo8(1)
 843 0028 90E0      		ldi r25,hi8(1)
 844 002a 9093 0000 		sts repeat_time+1,r25
 845 002e 8093 0000 		sts repeat_time,r24
 846               	.LSM145:
 847 0032 8091 0000 		lds r24,mod_keys
 848 0036 8093 0000 		sts keyboard_modifier_keys,r24
 849               	.LSM146:
 850 003a 8091 0000 		lds r24,last_key
 851 003e 0E94 0000 		call get_code
 852 0042 8093 0000 		sts keyboard_keys,r24
 853               	.LSM147:
 854 0046 0E94 0000 		call usb_keyboard_send
 855 004a 8823      		tst r24
 856 004c 01F0      		breq .+2
 857 004e 00C0      		rjmp .L79
 858               	.LSM148:
 859 0050 1092 0000 		sts keyboard_keys,__zero_reg__
 860               	.LSM149:
 861 0054 0E94 0000 		call usb_keyboard_send
 862 0058 0895      		ret
 863               	.L80:
 864               	.LSM150:
 865 005a 8091 0000 		lds r24,press_time2
 866 005e 9091 0000 		lds r25,press_time2+1
 867 0062 0097      		sbiw r24,0
 868 0064 01F0      		breq .L83
 869               	.LSM151:
 870 0066 4091 0000 		lds r20,press_time
 871 006a 5091 0000 		lds r21,press_time+1
 872 006e 2091 0000 		lds r18,pressed+35
 873 0072 2223      		tst r18
 874 0074 01F0      		breq .L89
 875 0076 25E0      		ldi r18,lo8(5)
 876 0078 30E0      		ldi r19,hi8(5)
 877 007a 00C0      		rjmp .L84
 878               	.L89:
 879 007c 2EE1      		ldi r18,lo8(30)
 880 007e 30E0      		ldi r19,hi8(30)
 881               	.L84:
 882               	.LSM152:
 883 0080 240F      		add r18,r20
 884 0082 351F      		adc r19,r21
 885 0084 8217      		cp r24,r18
 886 0086 9307      		cpc r25,r19
 887 0088 00F4      		brsh .L85
 888               	.LSM153:
 889 008a 0196      		adiw r24,1
 890 008c 9093 0000 		sts press_time2+1,r25
 891 0090 8093 0000 		sts press_time2,r24
 892 0094 0895      		ret
 893               	.L85:
 894               	.LSM154:
 895 0096 81E0      		ldi r24,lo8(1)
 896 0098 90E0      		ldi r25,hi8(1)
 897               	.L90:
 898 009a 9093 0000 		sts repeat_time+1,r25
 899 009e 8093 0000 		sts repeat_time,r24
 900 00a2 0895      		ret
 901               	.L83:
 902               	.LSM155:
 903 00a4 2091 0000 		lds r18,release_time
 904 00a8 3091 0000 		lds r19,release_time+1
 905 00ac 8091 0000 		lds r24,press_time
 906 00b0 9091 0000 		lds r25,press_time+1
 907 00b4 2115      		cp r18,__zero_reg__
 908 00b6 3105      		cpc r19,__zero_reg__
 909 00b8 01F0      		breq .L86
 910               	.LSM156:
 911 00ba C296      		adiw r24,50
 912 00bc 2817      		cp r18,r24
 913 00be 3907      		cpc r19,r25
 914 00c0 00F4      		brsh .L87
 915               	.LSM157:
 916 00c2 2F5F      		subi r18,lo8(-(1))
 917 00c4 3F4F      		sbci r19,hi8(-(1))
 918 00c6 3093 0000 		sts release_time+1,r19
 919 00ca 2093 0000 		sts release_time,r18
 920 00ce 0895      		ret
 921               	.L87:
 922               	.LSM158:
 923 00d0 1092 0000 		sts last_key,__zero_reg__
 924               	.LSM159:
 925 00d4 1092 0000 		sts release_time+1,__zero_reg__
 926 00d8 1092 0000 		sts release_time,__zero_reg__
 927               	.LSM160:
 928 00dc 1092 0000 		sts press_time+1,__zero_reg__
 929 00e0 1092 0000 		sts press_time,__zero_reg__
 930               	.LSM161:
 931 00e4 1092 0000 		sts press_time2+1,__zero_reg__
 932 00e8 1092 0000 		sts press_time2,__zero_reg__
 933 00ec 0895      		ret
 934               	.L86:
 935               	.LSM162:
 936 00ee 0097      		sbiw r24,0
 937 00f0 01F0      		breq .L79
 938               	.LSM163:
 939 00f2 8A3F      		cpi r24,250
 940 00f4 9105      		cpc r25,__zero_reg__
 941 00f6 00F4      		brsh .L88
 942               	.LSM164:
 943 00f8 0196      		adiw r24,1
 944 00fa 9093 0000 		sts press_time+1,r25
 945 00fe 8093 0000 		sts press_time,r24
 946 0102 0895      		ret
 947               	.L88:
 948               	.LSM165:
 949 0104 1092 0000 		sts press_time+1,__zero_reg__
 950 0108 1092 0000 		sts press_time,__zero_reg__
 951               	.L79:
 952 010c 0895      		ret
 953               	.LFE10:
 955               		.section	.text.poll,"ax",@progbits
 956               	.global	poll
 958               	poll:
 959               	.LFB9:
 960               	.LSM166:
 961 0000 8F92      		push r8
 962 0002 9F92      		push r9
 963 0004 AF92      		push r10
 964 0006 BF92      		push r11
 965 0008 CF92      		push r12
 966 000a DF92      		push r13
 967 000c EF92      		push r14
 968 000e FF92      		push r15
 969 0010 0F93      		push r16
 970 0012 1F93      		push r17
 971 0014 CF93      		push r28
 972 0016 DF93      		push r29
 973               	/* prologue: function */
 974               	/* frame size = 0 */
 975               	/* stack size = 12 */
 976               	.L__stack_usage = 12
 977               	.LVL68:
 978               	.LSM167:
 979 0018 00E0      		ldi r16,lo8(row_port)
 980 001a 10E0      		ldi r17,hi8(row_port)
 981 001c C0E0      		ldi r28,lo8(row_bit)
 982 001e D0E0      		ldi r29,hi8(row_bit)
 983               	.LSM168:
 984 0020 9924      		clr r9
 985               	.LVL69:
 986               	.L95:
 987               	.LSM169:
 988 0022 D801      		movw r26,r16
 989 0024 ED91      		ld r30,X+
 990 0026 FC91      		ld r31,X
 991               	.LSM170:
 992 0028 5E01      		movw r10,r28
 993               	.LSM171:
 994 002a 9881      		ld r25,Y
 995 002c 9095      		com r25
 996 002e 8081      		ld r24,Z
 997 0030 8923      		and r24,r25
 998 0032 8083      		st Z,r24
 999               	.LVL70:
 1000               	.LBB30:
 1001               	.LBB31:
 1002               	.LSM172:
 1003 0034 B5E0      		 ldi r27,lo8(5)
 1004 0036 BA95      	    1:dec r27
 1005 0038 01F4      	    brne 1b
 1006 003a 0000      		nop
 1007               	.LVL71:
 1008 003c 60E0      		ldi r22,lo8(col_pin)
 1009 003e E62E      		mov r14,r22
 1010 0040 60E0      		ldi r22,hi8(col_pin)
 1011 0042 F62E      		mov r15,r22
 1012 0044 50E0      		ldi r21,lo8(col_bit)
 1013 0046 C52E      		mov r12,r21
 1014 0048 50E0      		ldi r21,hi8(col_bit)
 1015 004a D52E      		mov r13,r21
 1016               	.LBE31:
 1017               	.LBE30:
 1018               	.LSM173:
 1019 004c 892C      		mov r8,r9
 1020               	.LVL72:
 1021               	.L94:
 1022               	.LSM174:
 1023 004e D701      		movw r26,r14
 1024 0050 ED91      		ld r30,X+
 1025 0052 FD91      		ld r31,X+
 1026 0054 7D01      		movw r14,r26
 1027 0056 D601      		movw r26,r12
 1028 0058 8D91      		ld r24,X+
 1029 005a 6D01      		movw r12,r26
 1030 005c 9081      		ld r25,Z
 1031 005e 8923      		and r24,r25
 1032 0060 282D      		mov r18,r8
 1033 0062 30E0      		ldi r19,lo8(0)
 1034 0064 01F4      		brne .L92
 1035               	.LSM175:
 1036 0066 2050      		subi r18,lo8(-(pressed))
 1037 0068 3040      		sbci r19,hi8(-(pressed))
 1038 006a F901      		movw r30,r18
 1039 006c 8081      		ld r24,Z
 1040 006e 8823      		tst r24
 1041 0070 01F4      		brne .L93
 1042               	.LSM176:
 1043 0072 882D      		mov r24,r8
 1044 0074 0E94 0000 		call key_press
 1045 0078 00C0      		rjmp .L93
 1046               	.L92:
 1047               	.LSM177:
 1048 007a 2050      		subi r18,lo8(-(pressed))
 1049 007c 3040      		sbci r19,hi8(-(pressed))
 1050 007e D901      		movw r26,r18
 1051 0080 8C91      		ld r24,X
 1052 0082 8823      		tst r24
 1053 0084 01F0      		breq .L93
 1054               	.LSM178:
 1055 0086 882D      		mov r24,r8
 1056 0088 0E94 0000 		call key_release
 1057               	.L93:
 1058 008c B5E0      		ldi r27,lo8(5)
 1059 008e 8B0E      		add r8,r27
 1060               	.LVL73:
 1061               	.LSM179:
 1062 0090 E0E0      		ldi r30,lo8(col_pin+24)
 1063 0092 EE16      		cp r14,r30
 1064 0094 E0E0      		ldi r30,hi8(col_pin+24)
 1065 0096 FE06      		cpc r15,r30
 1066 0098 01F4      		brne .L94
 1067               	.LSM180:
 1068 009a D801      		movw r26,r16
 1069 009c ED91      		ld r30,X+
 1070 009e FD91      		ld r31,X+
 1071 00a0 8D01      		movw r16,r26
 1072 00a2 2196      		adiw r28,1
 1073 00a4 8081      		ld r24,Z
 1074 00a6 D501      		movw r26,r10
 1075 00a8 9C91      		ld r25,X
 1076 00aa 892B      		or r24,r25
 1077 00ac 8083      		st Z,r24
 1078               	.LSM181:
 1079 00ae 9394      		inc r9
 1080               	.LVL74:
 1081 00b0 B92D      		mov r27,r9
 1082 00b2 B530      		cpi r27,lo8(5)
 1083 00b4 01F0      		breq .+2
 1084 00b6 00C0      		rjmp .L95
 1085               	.LSM182:
 1086 00b8 0E94 0000 		call repeat_tick
 1087               	.LVL75:
 1088               	.LBB32:
 1089               	.LBB33:
 1090               	.LSM183:
 1091 00bc EFE1      		 ldi r30,lo8(19999)
 1092 00be FEE4      	    ldi r31,hi8(19999)
 1093 00c0 3197      	    1:sbiw r30,1
 1094 00c2 01F4      	    brne 1b
 1095 00c4 00C0      		rjmp .
 1096 00c6 0000      		nop
 1097               	/* epilogue start */
 1098               	.LBE33:
 1099               	.LBE32:
 1100               	.LSM184:
 1101 00c8 DF91      		pop r29
 1102 00ca CF91      		pop r28
 1103 00cc 1F91      		pop r17
 1104 00ce 0F91      		pop r16
 1105 00d0 FF90      		pop r15
 1106 00d2 EF90      		pop r14
 1107 00d4 DF90      		pop r13
 1108 00d6 CF90      		pop r12
 1109 00d8 BF90      		pop r11
 1110 00da AF90      		pop r10
 1111 00dc 9F90      		pop r9
 1112               	.LVL76:
 1113 00de 8F90      		pop r8
 1114               	.LVL77:
 1115 00e0 0895      		ret
 1116               	.LFE9:
 1118               		.section	.text.main,"ax",@progbits
 1119               	.global	main
 1121               	main:
 1122               	.LFB7:
 1123               	.LSM185:
 1124               	/* prologue: function */
 1125               	/* frame size = 0 */
 1126               	/* stack size = 0 */
 1127               	.L__stack_usage = 0
 1128               	.LSM186:
 1129 0000 84B7      		in r24,84-32
 1130 0002 877F      		andi r24,lo8(-9)
 1131 0004 84BF      		out 84-32,r24
 1132               	.LSM187:
 1133 0006 88E1      		ldi r24,lo8(24)
 1134               	/* #APP */
 1135               	 ;  140 "catboard.c" 1
 1136 0008 0FB6      		in __tmp_reg__, __SREG__
 1137 000a F894      		cli
 1138 000c 8093 6000 		sts 96, r24
 1139 0010 1092 6000 		sts 96, __zero_reg__
 1140 0014 0FBE      		out __SREG__,__tmp_reg__
 1141               		
 1142               	 ;  0 "" 2
 1143               	.LVL78:
 1144               	/* #NOAPP */
 1145               	.LBB34:
 1146               	.LBB35:
 1147               	.LSM188:
 1148 0016 90E0      		ldi r25,lo8(0)
 1149 0018 80E8      		ldi r24,lo8(-128)
 1150               	/* #APP */
 1151               	 ;  1492 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h" 1
 1152 001a 0FB6      		in __tmp_reg__,__SREG__
 1153 001c F894      		cli
 1154 001e 8093 6100 		sts 97, r24
 1155 0022 9093 6100 		sts 97, r25
 1156 0026 0FBE      		out __SREG__, __tmp_reg__
 1157               	 ;  0 "" 2
 1158               	/* #NOAPP */
 1159               	.LBE35:
 1160               	.LBE34:
 1161               	.LSM189:
 1162 0028 0E94 0000 		call init
 1163               	.L99:
 1164               	.LSM190:
 1165 002c 0E94 0000 		call poll
 1166 0030 00C0      		rjmp .L99
 1167               	.LFE7:
 1169               	.global	layer2
 1170               		.data
 1173               	layer2:
 1174 0000 29        		.byte	41
 1175 0001 F1        		.byte	-15
 1176 0002 31        		.byte	49
 1177 0003 2B        		.byte	43
 1178 0004 35        		.byte	53
 1179 0005 FD        		.byte	-3
 1180 0006 14        		.byte	20
 1181 0007 09        		.byte	9
 1182 0008 0D        		.byte	13
 1183 0009 1E        		.byte	30
 1184 000a 2A        		.byte	42
 1185 000b 38        		.byte	56
 1186 000c 1C        		.byte	28
 1187 000d 06        		.byte	6
 1188 000e 1F        		.byte	31
 1189 000f 84        		.byte	-124
 1190 0010 16        		.byte	22
 1191 0011 19        		.byte	25
 1192 0012 18        		.byte	24
 1193 0013 20        		.byte	32
 1194 0014 81        		.byte	-127
 1195 0015 10        		.byte	16
 1196 0016 04        		.byte	4
 1197 0017 0E        		.byte	14
 1198 0018 21        		.byte	33
 1199 0019 82        		.byte	-126
 1200 001a 0C        		.byte	12
 1201 001b 13        		.byte	19
 1202 001c 08        		.byte	8
 1203 001d 22        		.byte	34
 1204 001e 2C        		.byte	44
 1205 001f 17        		.byte	23
 1206 0020 15        		.byte	21
 1207 0021 11        		.byte	17
 1208 0022 23        		.byte	35
 1209 0023 FF        		.byte	-1
 1210 0024 1B        		.byte	27
 1211 0025 12        		.byte	18
 1212 0026 0A        		.byte	10
 1213 0027 24        		.byte	36
 1214 0028 C0        		.byte	-64
 1215 0029 05        		.byte	5
 1216 002a 0F        		.byte	15
 1217 002b 0B        		.byte	11
 1218 002c 25        		.byte	37
 1219 002d 28        		.byte	40
 1220 002e 36        		.byte	54
 1221 002f 07        		.byte	7
 1222 0030 1A        		.byte	26
 1223 0031 26        		.byte	38
 1224 0032 30        		.byte	48
 1225 0033 37        		.byte	55
 1226 0034 33        		.byte	51
 1227 0035 1D        		.byte	29
 1228 0036 27        		.byte	39
 1229 0037 2E        		.byte	46
 1230 0038 F2        		.byte	-14
 1231 0039 34        		.byte	52
 1232 003a 2F        		.byte	47
 1233 003b 2D        		.byte	45
 1234               	.global	layout
 1237               	layout:
 1238 003c 0000      		.word	layer2
 1239               	.global	mac_mode
 1240               	.global	mac_mode
 1241               		.section .bss
 1244               	mac_mode:
 1245 0000 00        		.skip 1,0
 1246               	.global	layer1
 1247               		.data
 1250               	layer1:
 1251 003e 29        		.byte	41
 1252 003f F1        		.byte	-15
 1253 0040 31        		.byte	49
 1254 0041 2B        		.byte	43
 1255 0042 35        		.byte	53
 1256 0043 FD        		.byte	-3
 1257 0044 1D        		.byte	29
 1258 0045 04        		.byte	4
 1259 0046 14        		.byte	20
 1260 0047 1E        		.byte	30
 1261 0048 2A        		.byte	42
 1262 0049 1B        		.byte	27
 1263 004a 16        		.byte	22
 1264 004b 1A        		.byte	26
 1265 004c 1F        		.byte	31
 1266 004d 84        		.byte	-124
 1267 004e 06        		.byte	6
 1268 004f 07        		.byte	7
 1269 0050 08        		.byte	8
 1270 0051 20        		.byte	32
 1271 0052 81        		.byte	-127
 1272 0053 19        		.byte	25
 1273 0054 09        		.byte	9
 1274 0055 15        		.byte	21
 1275 0056 21        		.byte	33
 1276 0057 82        		.byte	-126
 1277 0058 05        		.byte	5
 1278 0059 0A        		.byte	10
 1279 005a 17        		.byte	23
 1280 005b 22        		.byte	34
 1281 005c 2C        		.byte	44
 1282 005d 11        		.byte	17
 1283 005e 0B        		.byte	11
 1284 005f 1C        		.byte	28
 1285 0060 23        		.byte	35
 1286 0061 FF        		.byte	-1
 1287 0062 10        		.byte	16
 1288 0063 0D        		.byte	13
 1289 0064 18        		.byte	24
 1290 0065 24        		.byte	36
 1291 0066 C0        		.byte	-64
 1292 0067 36        		.byte	54
 1293 0068 0E        		.byte	14
 1294 0069 0C        		.byte	12
 1295 006a 25        		.byte	37
 1296 006b 28        		.byte	40
 1297 006c 37        		.byte	55
 1298 006d 0F        		.byte	15
 1299 006e 12        		.byte	18
 1300 006f 26        		.byte	38
 1301 0070 30        		.byte	48
 1302 0071 38        		.byte	56
 1303 0072 33        		.byte	51
 1304 0073 13        		.byte	19
 1305 0074 27        		.byte	39
 1306 0075 2E        		.byte	46
 1307 0076 F2        		.byte	-14
 1308 0077 34        		.byte	52
 1309 0078 2F        		.byte	47
 1310 0079 2D        		.byte	45
 1311               	.global	layer_fn
 1314               	layer_fn:
 1315 007a 29        		.byte	41
 1316 007b F1        		.byte	-15
 1317 007c 00        		.byte	0
 1318 007d 2B        		.byte	43
 1319 007e 46        		.byte	70
 1320 007f 53        		.byte	83
 1321 0080 62        		.byte	98
 1322 0081 55        		.byte	85
 1323 0082 54        		.byte	84
 1324 0083 3A        		.byte	58
 1325 0084 2A        		.byte	42
 1326 0085 59        		.byte	89
 1327 0086 5C        		.byte	92
 1328 0087 5F        		.byte	95
 1329 0088 3B        		.byte	59
 1330 0089 84        		.byte	-124
 1331 008a 5A        		.byte	90
 1332 008b 5D        		.byte	93
 1333 008c 60        		.byte	96
 1334 008d 3C        		.byte	60
 1335 008e 81        		.byte	-127
 1336 008f 5B        		.byte	91
 1337 0090 5E        		.byte	94
 1338 0091 61        		.byte	97
 1339 0092 3D        		.byte	61
 1340 0093 82        		.byte	-126
 1341 0094 63        		.byte	99
 1342 0095 57        		.byte	87
 1343 0096 35        		.byte	53
 1344 0097 3E        		.byte	62
 1345 0098 FC        		.byte	-4
 1346 0099 2A        		.byte	42
 1347 009a 28        		.byte	40
 1348 009b FD        		.byte	-3
 1349 009c 3F        		.byte	63
 1350 009d FF        		.byte	-1
 1351 009e 4C        		.byte	76
 1352 009f 50        		.byte	80
 1353 00a0 4A        		.byte	74
 1354 00a1 40        		.byte	64
 1355 00a2 FE        		.byte	-2
 1356 00a3 49        		.byte	73
 1357 00a4 51        		.byte	81
 1358 00a5 52        		.byte	82
 1359 00a6 41        		.byte	65
 1360 00a7 28        		.byte	40
 1361 00a8 00        		.byte	0
 1362 00a9 4F        		.byte	79
 1363 00aa 4D        		.byte	77
 1364 00ab 42        		.byte	66
 1365 00ac 00        		.byte	0
 1366 00ad 00        		.byte	0
 1367 00ae 4E        		.byte	78
 1368 00af 4B        		.byte	75
 1369 00b0 43        		.byte	67
 1370 00b1 45        		.byte	69
 1371 00b2 F2        		.byte	-14
 1372 00b3 00        		.byte	0
 1373 00b4 29        		.byte	41
 1374 00b5 44        		.byte	68
 1375               	.global	row_port
 1378               	row_port:
 1379 00b6 2800      		.word	40
 1380 00b8 2800      		.word	40
 1381 00ba 2800      		.word	40
 1382 00bc 2800      		.word	40
 1383 00be 2800      		.word	40
 1384               	.global	row_bit
 1387               	row_bit:
 1388 00c0 80        		.byte	-128
 1389 00c1 40        		.byte	64
 1390 00c2 20        		.byte	32
 1391 00c3 10        		.byte	16
 1392 00c4 04        		.byte	4
 1393               	.global	col_pin
 1396               	col_pin:
 1397 00c5 2900      		.word	41
 1398 00c7 2900      		.word	41
 1399 00c9 2900      		.word	41
 1400 00cb 2900      		.word	41
 1401 00cd 2900      		.word	41
 1402 00cf 2900      		.word	41
 1403 00d1 2300      		.word	35
 1404 00d3 2300      		.word	35
 1405 00d5 2300      		.word	35
 1406 00d7 2300      		.word	35
 1407 00d9 2300      		.word	35
 1408 00db 2300      		.word	35
 1409               	.global	col_bit
 1412               	col_bit:
 1413 00dd 40        		.byte	64
 1414 00de 20        		.byte	32
 1415 00df 08        		.byte	8
 1416 00e0 04        		.byte	4
 1417 00e1 02        		.byte	2
 1418 00e2 01        		.byte	1
 1419 00e3 80        		.byte	-128
 1420 00e4 40        		.byte	64
 1421 00e5 20        		.byte	32
 1422 00e6 10        		.byte	16
 1423 00e7 02        		.byte	2
 1424 00e8 01        		.byte	1
 1425               	.global	queue
 1428               	queue:
 1429 00e9 FF        		.byte	-1
 1430 00ea FF        		.byte	-1
 1431 00eb FF        		.byte	-1
 1432 00ec FF        		.byte	-1
 1433 00ed FF        		.byte	-1
 1434 00ee FF        		.byte	-1
 1435 00ef FF        		.byte	-1
 1436               	.global	mod_keys
 1437               	.global	mod_keys
 1438               		.section .bss
 1441               	mod_keys:
 1442 0001 00        		.skip 1,0
 1443               	.global	prev_layer
 1444               	.global	prev_layer
 1447               	prev_layer:
 1448 0002 0000      		.skip 2,0
 1449               	.global	last_key
 1450               	.global	last_key
 1453               	last_key:
 1454 0004 00        		.skip 1,0
 1455               	.global	press_time
 1456               	.global	press_time
 1459               	press_time:
 1460 0005 0000      		.skip 2,0
 1461               	.global	press_time2
 1462               	.global	press_time2
 1465               	press_time2:
 1466 0007 0000      		.skip 2,0
 1467               	.global	release_time
 1468               	.global	release_time
 1471               	release_time:
 1472 0009 0000      		.skip 2,0
 1473               	.global	repeat_time
 1474               	.global	repeat_time
 1477               	repeat_time:
 1478 000b 0000      		.skip 2,0
 1479               		.comm pressed,60,1
 1568               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 catboard.c
     /tmp/cc9giWqR.s:2      *ABS*:0000003f __SREG__
     /tmp/cc9giWqR.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc9giWqR.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc9giWqR.s:5      *ABS*:00000034 __CCP__
     /tmp/cc9giWqR.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc9giWqR.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc9giWqR.s:19     .text.change_layout:00000000 change_layout
     /tmp/cc9giWqR.s:1244   .bss:00000000 mac_mode
     /tmp/cc9giWqR.s:92     .text.init:00000000 init
                            *COM*:0000003c pressed
     /tmp/cc9giWqR.s:167    .text.get_code:00000000 get_code
     /tmp/cc9giWqR.s:1314   .data:0000007a layer_fn
     /tmp/cc9giWqR.s:1237   .data:0000003c layout
     /tmp/cc9giWqR.s:1250   .data:0000003e layer1
     /tmp/cc9giWqR.s:240    .text.send:00000000 send
     /tmp/cc9giWqR.s:1428   .data:000000e9 queue
     /tmp/cc9giWqR.s:1441   .bss:00000001 mod_keys
     /tmp/cc9giWqR.s:287    .text.key_release:00000000 key_release
     /tmp/cc9giWqR.s:1453   .bss:00000004 last_key
     /tmp/cc9giWqR.s:1465   .bss:00000007 press_time2
     /tmp/cc9giWqR.s:1471   .bss:00000009 release_time
     /tmp/cc9giWqR.s:1459   .bss:00000005 press_time
     /tmp/cc9giWqR.s:1477   .bss:0000000b repeat_time
     /tmp/cc9giWqR.s:470    .text.key_press:00000000 key_press
     /tmp/cc9giWqR.s:1447   .bss:00000002 prev_layer
     /tmp/cc9giWqR.s:1173   .data:00000000 layer2
     /tmp/cc9giWqR.s:815    .text.repeat_tick:00000000 repeat_tick
     /tmp/cc9giWqR.s:958    .text.poll:00000000 poll
     /tmp/cc9giWqR.s:1378   .data:000000b6 row_port
     /tmp/cc9giWqR.s:1387   .data:000000c0 row_bit
     /tmp/cc9giWqR.s:1396   .data:000000c5 col_pin
     /tmp/cc9giWqR.s:1412   .data:000000dd col_bit
     /tmp/cc9giWqR.s:1121   .text.main:00000000 main

UNDEFINED SYMBOLS
keyboard_modifier_keys
keyboard_keys
usb_keyboard_send
usb_keyboard_press
usb_init
usb_configured
__do_copy_data
__do_clear_bss
