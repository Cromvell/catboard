Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o (exit)
/usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
                              catboard.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
                              catboard.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

pressed             0x3c              catboard.o

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
 .text          0x0000000000000000        0x0 catboard.o
 .text          0x0000000000000000        0x0 usb_keyboard.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000010000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
LOAD catboard.o
LOAD usb_keyboard.o
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/libm.a
LOAD /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xde0
 *(.vectors)
 .vectors       0x0000000000000000       0x74 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000074       0xd2 usb_keyboard.o
                0x0000000000000146                . = ALIGN (0x2)
                0x0000000000000146                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000146        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000146                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000146                __ctors_start = .
 *(.ctors)
                0x0000000000000146                __ctors_end = .
                0x0000000000000146                __dtors_start = .
 *(.dtors)
                0x0000000000000146                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000146        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
                0x0000000000000146                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000146        0xc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000152       0x16 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
                0x0000000000000152                __do_copy_data
 .init4         0x0000000000000168       0x10 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
                0x0000000000000168                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000178        0x4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
 *(.init9)
 *(.text)
 .text          0x000000000000017c        0x2 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
                0x000000000000017c                __vector_22
                0x000000000000017c                __vector_28
                0x000000000000017c                __vector_1
                0x000000000000017c                __vector_24
                0x000000000000017c                __bad_interrupt
                0x000000000000017c                __vector_6
                0x000000000000017c                __vector_3
                0x000000000000017c                __vector_23
                0x000000000000017c                __vector_25
                0x000000000000017c                __vector_13
                0x000000000000017c                __vector_17
                0x000000000000017c                __vector_19
                0x000000000000017c                __vector_7
                0x000000000000017c                __vector_27
                0x000000000000017c                __vector_5
                0x000000000000017c                __vector_4
                0x000000000000017c                __vector_9
                0x000000000000017c                __vector_2
                0x000000000000017c                __vector_21
                0x000000000000017c                __vector_15
                0x000000000000017c                __vector_8
                0x000000000000017c                __vector_26
                0x000000000000017c                __vector_14
                0x000000000000017c                __vector_10
                0x000000000000017c                __vector_16
                0x000000000000017c                __vector_18
                0x000000000000017c                __vector_20
                0x000000000000017e                . = ALIGN (0x2)
 *(.text.*)
 .text.init     0x000000000000017e       0x4e catboard.o
                0x000000000000017e                init
 .text.key_press_sw2
                0x00000000000001cc       0x36 catboard.o
                0x00000000000001cc                key_press_sw2
 .text.key_release_sw2
                0x0000000000000202       0x16 catboard.o
                0x0000000000000202                key_release_sw2
 .text.change_layout
                0x0000000000000218       0x50 catboard.o
                0x0000000000000218                change_layout
 .text.get_code
                0x0000000000000268       0x4c catboard.o
                0x0000000000000268                get_code
 .text.send     0x00000000000002b4       0x34 catboard.o
                0x00000000000002b4                send
 .text.key_release
                0x00000000000002e8      0x1ec catboard.o
                0x00000000000002e8                key_release
 .text.key_press
                0x00000000000004d4      0x278 catboard.o
                0x00000000000004d4                key_press
 .text.repeat_tick
                0x000000000000074c      0x10c catboard.o
                0x000000000000074c                repeat_tick
 .text.poll     0x0000000000000858       0xe2 catboard.o
                0x0000000000000858                poll
 .text.startup.main
                0x000000000000093a       0x2e catboard.o
                0x000000000000093a                main
 .text.usb_wait_in_ready
                0x0000000000000968        0xa usb_keyboard.o
 .text.usb_init
                0x0000000000000972       0x28 usb_keyboard.o
                0x0000000000000972                usb_init
 .text.usb_configured
                0x000000000000099a        0x6 usb_keyboard.o
                0x000000000000099a                usb_configured
 .text.usb_keyboard_send
                0x00000000000009a0       0x74 usb_keyboard.o
                0x00000000000009a0                usb_keyboard_send
 .text.usb_keyboard_press
                0x0000000000000a14       0x1a usb_keyboard.o
                0x0000000000000a14                usb_keyboard_press
 .text.__vector_11
                0x0000000000000a2e       0xbe usb_keyboard.o
                0x0000000000000a2e                __vector_11
 .text.__vector_12
                0x0000000000000aec      0x2f0 usb_keyboard.o
                0x0000000000000aec                __vector_12
                0x0000000000000ddc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000ddc        0x0 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
                0x0000000000000ddc                exit
                0x0000000000000ddc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000ddc        0x4 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000de0                _etext = .

.data           0x0000000000800100      0x134 load address 0x0000000000000de0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0xb catboard.o
                0x0000000000800100                last_key
                0x0000000000800101                turbo_repeat
                0x0000000000800102                queue
                0x0000000000800109                layout
 .data          0x000000000080010b        0x2 usb_keyboard.o
 *(.data*)
 *(.rodata)
 .rodata        0x000000000080010d      0x126 catboard.o
                0x000000000080010d                col_bit_sw2
                0x000000000080010e                col_pin_sw2
                0x0000000000800110                col_bit
                0x000000000080011c                col_pin
                0x0000000000800134                row_bit
                0x0000000000800139                row_port
                0x0000000000800143                layer_fnlock
                0x000000000080017f                layer_fn
                0x00000000008001bb                layer1
                0x00000000008001f7                layer2
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800234                . = ALIGN (0x2)
 *fill*         0x0000000000800233        0x1 00
                0x0000000000800234                _edata = .
                0x0000000000800234                PROVIDE (__data_end, .)

.bss            0x0000000000800234       0x54
                0x0000000000800234                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800234        0xd catboard.o
                0x0000000000800234                repeat_time
                0x0000000000800236                release_time
                0x0000000000800238                press_time2
                0x000000000080023a                press_time
                0x000000000080023c                prev_layer
                0x000000000080023e                mod_keys
                0x000000000080023f                pressed_sw2
                0x0000000000800240                mac_mode
 .bss           0x0000000000800241        0xb usb_keyboard.o
                0x0000000000800241                keyboard_modifier_keys
                0x0000000000800242                keyboard_keys
                0x0000000000800248                keyboard_leds
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080024c       0x3c catboard.o
                0x000000000080024c                pressed
                0x0000000000800288                PROVIDE (__bss_end, .)
                0x0000000000000de0                __data_load_start = LOADADDR (.data)
                0x0000000000000f14                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800288        0x0
                0x0000000000800288                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800288                PROVIDE (__noinit_end, .)
                0x0000000000800288                _end = .
                0x0000000000800288                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 catboard.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x70 catboard.o
 .debug_aranges
                0x0000000000000070       0x50 usb_keyboard.o

.debug_pubnames
                0x0000000000000000       0xbe
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0xbe usb_keyboard.o

.debug_info     0x0000000000000000     0x11bd
 *(.debug_info)
 .debug_info    0x0000000000000000      0xab9 catboard.o
 .debug_info    0x0000000000000ab9      0x704 usb_keyboard.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x541
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x36c catboard.o
 .debug_abbrev  0x000000000000036c      0x1d5 usb_keyboard.o

.debug_line     0x0000000000000000      0xaf9
 *(.debug_line)
 .debug_line    0x0000000000000000      0x3ed catboard.o
 .debug_line    0x00000000000003ed      0x70c usb_keyboard.o

.debug_frame    0x0000000000000000      0x1b8
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x138 catboard.o
 .debug_frame   0x0000000000000138       0x80 usb_keyboard.o

.debug_str      0x0000000000000000      0x5a0
 *(.debug_str)
 .debug_str     0x0000000000000000      0x347 catboard.o
                                        0x3a2 (size before relaxing)
 .debug_str     0x0000000000000347      0x259 usb_keyboard.o
                                        0x353 (size before relaxing)

.debug_loc      0x0000000000000000      0xe9e
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x6ef catboard.o
 .debug_loc     0x00000000000006ef      0x7af usb_keyboard.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(catboard.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x0000000000000000       0xd0
 .debug_ranges  0x0000000000000000       0x78 catboard.o
 .debug_ranges  0x0000000000000078       0x58 usb_keyboard.o

.debug_pubtypes
                0x0000000000000000       0x7e
 .debug_pubtypes
                0x0000000000000000       0x7e usb_keyboard.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__bss_end                                         /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_clear_bss.o)
                                                  usb_keyboard.o
                                                  catboard.o
__do_copy_data                                    /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_copy_data.o)
                                                  usb_keyboard.o
                                                  catboard.o
__heap_end                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__init                                            /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__stack                                           /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_1                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_10                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_11                                       usb_keyboard.o
                                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_12                                       usb_keyboard.o
                                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_13                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_14                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_15                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_16                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_17                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_18                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_19                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_2                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_20                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_21                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_22                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_23                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_24                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_25                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_26                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_27                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_28                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_3                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_4                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_5                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_6                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_7                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_8                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_9                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vector_default                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
__vectors                                         /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
_exit                                             /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
change_layout                                     catboard.o
col_bit                                           catboard.o
col_bit_sw2                                       catboard.o
col_pin                                           catboard.o
col_pin_sw2                                       catboard.o
exit                                              /usr/lib/gcc/avr/4.7.0/avr35/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
get_code                                          catboard.o
init                                              catboard.o
key_press                                         catboard.o
key_press_sw2                                     catboard.o
key_release                                       catboard.o
key_release_sw2                                   catboard.o
keyboard_keys                                     usb_keyboard.o
                                                  catboard.o
keyboard_leds                                     usb_keyboard.o
keyboard_modifier_keys                            usb_keyboard.o
                                                  catboard.o
last_key                                          catboard.o
layer1                                            catboard.o
layer2                                            catboard.o
layer_fn                                          catboard.o
layer_fnlock                                      catboard.o
layout                                            catboard.o
mac_mode                                          catboard.o
main                                              catboard.o
                                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr35/crtusb162.o
mod_keys                                          catboard.o
poll                                              catboard.o
press_time                                        catboard.o
press_time2                                       catboard.o
pressed                                           catboard.o
pressed_sw2                                       catboard.o
prev_layer                                        catboard.o
queue                                             catboard.o
release_time                                      catboard.o
repeat_tick                                       catboard.o
repeat_time                                       catboard.o
row_bit                                           catboard.o
row_port                                          catboard.o
send                                              catboard.o
turbo_repeat                                      catboard.o
usb_configured                                    usb_keyboard.o
                                                  catboard.o
usb_init                                          usb_keyboard.o
                                                  catboard.o
usb_keyboard_press                                usb_keyboard.o
                                                  catboard.o
usb_keyboard_send                                 usb_keyboard.o
                                                  catboard.o
